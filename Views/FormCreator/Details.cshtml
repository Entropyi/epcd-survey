@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model feedback.Models.Form
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = @Localizer["surveydetails"];
}


@await Html.PartialAsync("Header")


<div class="return-super-container">
    <form asp-action="Index" class="return-container">
        <a class="return-text" asp-action="Index">@Localizer["Return"]</a>
    </form>
</div>


<div class="form__super-title-container">

<div class="title-super-container">
    <div class="title-sup-container">
        <h1 class="form__super-title-text" id="formTitle">
            @ViewBag.PageTitle
        </h1>
    </div>
</div>


<div class="metaInfoSuperContainer">
    <div class="metaDataContainer">
        <div class="infoContainer1">
            <p>@Localizer["responseCount"] : @ViewBag.ageCountTotal</p>
            <p>@Localizer["questionCount"] : @ViewBag.numberOfQuestions</p>
        </div>
        <div class="infoContainer1">
            <p>@Localizer["startDate"] : @ViewBag.startDate</p>
            <p>@Localizer["endDate"] : @ViewBag.endDate</p>
        </div>
    </div>
</div>


<div class="form__create-container">

    <div class="filters__super-container">
        <div class="filters__container">
            <div class="filters__bySex">
                <p>
                    فرز حسب الجنس
                </p>
                <button id="filterMale"
                        onclick="chartOneFilter(
                        this,
                        @ViewBag.ageByMale[0],
                        @ViewBag.ageByMale[1],
                        @ViewBag.ageByMale[2],
                        @ViewBag.ageByMale[3],
                        )"
                        class="filter__button">
                    ذكر
                </button>
                <button id="filterFemale"
                        onclick="chartOneFilter(
                            this,
                        @ViewBag.ageByFemale[0],
                        @ViewBag.ageByFemale[1],
                        @ViewBag.ageByFemale[2],
                        @ViewBag.ageByFemale[3],
                    )" class="filter__button">
                    انثى
                </button>
            </div>

            <div class="filters__byEducation">
                <p>
                    فرز حسب المستوى التعليمي
                </p>
                <button id="eduButton1"
                        onclick="chartOneFilter(
                        this,
                        @ViewBag.eduOne[0],
                        @ViewBag.eduOne[1],
                        @ViewBag.eduOne[2],
                        @ViewBag.eduOne[3]
                        )"
                        class="filter__button">ابتدائي</button>
                <button
                    id="eduButton2"
                    onclick="chartOneFilter(
                        this,
                    @ViewBag.eduTwo[0],
                    @ViewBag.eduTwo[1],
                    @ViewBag.eduTwo[2],
                    @ViewBag.eduTwo[3]
                        )"class="filter__button">متوسط</button>
                <button
                    id="eduButton3"
                    onclick="chartOneFilter(
                        this,
                    @ViewBag.edu3ByAge[0],
                    @ViewBag.edu3ByAge[1],
                    @ViewBag.edu3ByAge[2],
                    @ViewBag.edu3ByAge[3]
                        )"
                    class="filter__button">ثانوي</button>
                <button  id="eduButton4"
                            onclick="chartOneFilter(
                                this,
                            @ViewBag.edu4ByAge[0],
                            @ViewBag.edu4ByAge[1],
                            @ViewBag.edu4ByAge[2],
                            @ViewBag.edu4ByAge[3]
                                )"
                            class="filter__button">بكالوريوس</button>
                <button
                    id="eduButton5"
                    onclick="chartOneFilter(
                        this,
                    @ViewBag.edu5ByAge[0],
                    @ViewBag.edu5ByAge[1],
                    @ViewBag.edu5ByAge[2],
                    @ViewBag.edu5ByAge[3]
                        )"
                    class="filter__button">تعليم عالي</button>
            </div>
        </div>
    </div>

    <div class="chart-super-container">
        <div class="chart-sub-container">
            <div class="chart-question-container">
                <label class="form__label-text">@Localizer["one"]</label>
                <label class="form__label-text">@ViewBag.Question1</label>
            </div>
            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.ageCountTotal
                </p>
            </div>
            <canvas id="Question1" width="400" height="200"></canvas>
        </div>
    </div>
</div>

<div class="form__create-container">

    <div class="chart-super-container">
        <div class="chart-sub-container">
            <div class="chart-question-container">
                <label class="form__label-text">@Localizer["two"] :</label>
                <label class="form__label-text">@ViewBag.Question2</label>
            </div>

            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.eduCountTotal
                </p>
            </div>
            <canvas id="Question2" width="400" height="200"></canvas>
        </div>
    </div>
</div>

<div class="form__create-container">

    <div class="chart-super-container">
        <div class="chart-sub-container">
            <div class="chart-question-container">
                <label class="form__label-text">@Localizer["three"] :</label>
                <label class="form__label-text">@ViewBag.Question3</label>
            </div>
            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.sexesCountTotal
                </p>
            </div>
            <canvas id="Question3" width="400" height="200"></canvas>
        </div>
    </div>
</div>

<div class="form__create-container">

    <div class="chart-super-container">
        <div class="chart-sub-container">
            <div class="chart-question-container">
                <label class="form__label-text">@Localizer["four"] :</label>
                <label class="form__label-text">@ViewBag.Question4</label>
            </div>
            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.sexesCountTotal
                </p>
            </div>
            <canvas id="Question4" width="400" height="200"></canvas>
        </div>
    </div>
</div>

<div class="form__create-container">

    <div class="chart-super-container">
        <div class="chart-sub-container">
            <div class="chart-question-container">
                <label class="form__label-text">@Localizer["five"] :</label>
                <label class="form__label-text">@ViewBag.Question4</label>
            </div>
            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.sexesCountTotal
                </p>
            </div>
            <canvas id="Question5" width="400" height="200"></canvas>
        </div>
    </div>
</div>

<div class="form__create-container">

    <div class="chart-super-container">
        <div class="chart-sub-container">
            <div class="chart-question-container">
                <label class="form__label-text">@Localizer["six"] :</label>
                <label class="form__label-text">@ViewBag.Question5</label>
            </div>
            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.sexesCountTotal
                </p>
            </div>
            <canvas id="Question6" width="400" height="200"></canvas>
        </div>
    </div>
</div>

<div style="display: block">
    <div class="form__create-container">

        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["seven"] :</label>
                    <label class="form__label-text">@ViewBag.Question6</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question7" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="form__create-container">

        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["eight"] :</label>
                    <label class="form__label-text">@ViewBag.Question7</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question8" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="form__create-container">

        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["nine"] :</label>
                    <label class="form__label-text">@ViewBag.Question8</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question9" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="form__create-container">

        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["10"] :</label>
                    <label class="form__label-text">@ViewBag.Question9</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question10" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="form__create-container" style="display: none" id="containerOfQuestion11">

        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["11"] :</label>
                    <label class="form__label-text">@ViewBag.Question10</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question11" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="form__create-container" style="display: none" id="containerOfQuestion12">

        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["12"] :</label>
                    <label class="form__label-text">@ViewBag.Question11</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question12" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="form__create-container" style="display: none" id="containerOfQuestion13">
        <div class="chart-super-container">
            <div class="chart-sub-container">
                <div class="chart-question-container">
                    <label class="form__label-text">@Localizer["13"] :</label>
                    <label class="form__label-text">@ViewBag.Question12</label>
                </div>
                <div class="responseCountContainer">
                    <p class="form__label-text">
                        @Localizer["responseCount"] : @ViewBag.ageCountTotal
                    </p>
                </div>
                <canvas id="Question13" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

</div>
<div class="chart-super-container">
    <div class="chart-sub-container">
        <div class="chart-question-container" style="margin-bottom: 1em">
            <label class="form__label-text">@Localizer["14"]:</label>
            <label class="form__label-text">@ViewBag.openQuestion</label>
            <div class="responseCountContainer">
                <p class="form__label-text">
                    @Localizer["responseCount"] : @ViewBag.openQuestionaCount
                </p>
            </div>
        </div>

        @foreach (var values in ViewBag.openQuestiona)
        {
            <div class="chart-question-container">
                <p style="margin-bottom: 0.5em">@values</p>
            </div>
        }
    </div>
</div>


</div>

<script>

    const Question1 = document.getElementById('Question1').getContext('2d');
    const Question2 = document.getElementById('Question2').getContext('2d');
    const Question3 = document.getElementById('Question3').getContext('2d');
    const Question4 = document.getElementById('Question4').getContext('2d');
    const Question5 = document.getElementById('Question5').getContext('2d');
    const Question6 = document.getElementById('Question6').getContext('2d');
    const Question7 = document.getElementById('Question7').getContext('2d');
    const Question8 = document.getElementById('Question8').getContext('2d');
    const Question9 = document.getElementById('Question9').getContext('2d');
    const Question10 = document.getElementById('Question10').getContext('2d');
    
    const filterMale = document.getElementById('filterMale');
    const filterFemale = document.getElementById('filterFemale');

   

    
    const options = {
        responsive: true,
        tooltips: {
            enabled: false
        },
        plugins: {
            datalabels: {
                formatter: (value, ctx) => {
                    const datapoints = ctx.chart.data.datasets[0].data
                    const total = datapoints.reduce((total, datapoint) => total + datapoint, 0)
                    const percentage = value / total * 100
                    return percentage.toFixed(2) + "%";
                },
                color: '#fff',
                textAlign: "center",
            }
        }
    };

    let chartType = "bar";
    
    
    


    
    Chart.defaults.font.family = "Font-Regular"
    
    let chart1 = new Chart(Question1, {
        plugins: [ChartDataLabels],
        type: chartType, // Chart type (e.g., bar, line)
        data: {
            labels: [
                '@Localizer["answerAge1"]',
                '@Localizer["answerAge2"]',
                '@Localizer["answerAge3"]',
                '@Localizer["answerAge4"]'
            ],
            
            datasets: [
                {
                    label: '@Html.Raw(ViewBag.Question1)',
                    data: [
                        @ViewBag.AgeCount1,
                        @ViewBag.AgeCount2,
                        @ViewBag.AgeCount3,
                        @ViewBag.AgeCount4
                    ],
                    borderColor: 'rgba(5, 41, 118, 1)',
                    backgroundColor: 'rgba(5, 41, 118, 1)',
                    borderWidth: 1
                },
            ]
        },
        options: options
    });
    
    let chartOneCounter = 0;
    let chartOneCounterMale = 0;
    let chartOneCounterMFemale = 0;
    
    function chartOneFilter(button,data1,data2,data3,data4){
        if (!(button == filterMale)){
            filterMale.style.background = "none"
            filterMale.style.color = "black"
            }

        if (!(button == filterFemale)){
            filterFemale.style.background = "none"
            filterFemale.style.color = "black"
        }  
        
         if (!(button.id == "eduButton1")){
             button.style.background = "none"
             button.style.color = "black"
        }

        if (chartOneCounter == 0){

            button.style.background = "blue"
            button.style.color = "white"
        
        chart1.destroy();
        chartOneCounter++;
        chart1 = new Chart(Question1, {
            plugins: [ChartDataLabels],
            type: chartType, // Chart type (e.g., bar, line)
            data: {
                labels: [
                    '@Localizer["answerAge1"]',
                    '@Localizer["answerAge2"]',
                    '@Localizer["answerAge3"]',
                    '@Localizer["answerAge4"]'
                ],

                datasets: [
                    {
                        label: '@Html.Raw(ViewBag.Question1)',
                        data: [
                            data1,
                            data2,
                            data3,
                            data4
                        ],
                        borderColor: 'rgba(5, 41, 118, 1)',
                        backgroundColor: 'rgba(5, 41, 118, 1)',
                        borderWidth: 1
                    },
                ]
            },
            options: options
        });
        return;
        }
        chart1.destroy()
        button.style.background = "none"
        button.style.color = "black"
        
        chart1 = new Chart(Question1, {
            plugins: [ChartDataLabels],
            type: chartType, // Chart type (e.g., bar, line)
            data: {
                labels: [
                    '@Localizer["answerAge1"]',
                    '@Localizer["answerAge2"]',
                    '@Localizer["answerAge3"]',
                    '@Localizer["answerAge4"]'
                ],

                datasets: [
                    {
                        label: '@Html.Raw(ViewBag.Question1)',
                        data: [
                            @ViewBag.AgeCount1,
                            @ViewBag.AgeCount2,
                            @ViewBag.AgeCount3,
                            @ViewBag.AgeCount4
                        ],
                        borderColor: 'rgba(5, 41, 118, 1)',
                        backgroundColor: 'rgba(5, 41, 118, 1)',
                        borderWidth: 1
                    },
                ]
            },
            options: options
        });
        chartOneCounter--;
    }



    const chart2 = new Chart(Question2, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
            '@Localizer["asnwerSex1"]',
            '@Localizer["asnwerSex2"]'
            ],  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question2)',
                data: [
                @ViewBag.Sex1,
                @ViewBag.Sex2
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options: options,
    });

    
    
     const chart3 = new Chart(Question3, {
         plugins: [ChartDataLabels],
         type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["asnwerEdu1"]',
                '@Localizer["asnwerEdu2"]',
                '@Localizer["asnwerEdu3"]',
                '@Localizer["asnwerEdu4"]',
                '@Localizer["asnwerEdu5"]'
               ],  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question3)',
                data: [
                @ViewBag.eduCount1,
                @ViewBag.eduCount2,
                @ViewBag.eduCount3, 
                @ViewBag.eduCount4
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options: options
    });
    
    const chart4 = new Chart(Question4, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
            '@Localizer["answerScale1"]',
            '@Localizer["answerScale2"]',
            '@Localizer["answerScale3"]',
            '@Localizer["answerScale4"]',
            '@Localizer["answerScale5"]',
            ], // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question4)',
                data: [
                @ViewBag.Scale1Count1,
                @ViewBag.Scale1Count2,
                @ViewBag.Scale1Count3, 
                @ViewBag.Scale1Count4
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }],
        },
        options: options
    });

    const chart5 = new Chart(Question5, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',], // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question5)',
                data: [
                    @ViewBag.Scale2Count1,
                    @ViewBag.Scale2Count2,
                    @ViewBag.Scale2Count3,
                    @ViewBag.Scale2Count4
                ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }],
        },
        options:options
    }); 
    
    const chart6 = new Chart(Question6, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',], // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question6)',
                data: [
                    @ViewBag.Scale3Count1,
                    @ViewBag.Scale3Count2,
                    @ViewBag.Scale3Count3,
                    @ViewBag.Scale3Count4
                ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }],
        },
        options:options
    });

    const chart7 = new Chart(Question7, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',], // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question7)',
                data: [
                    @ViewBag.Scale4Count1,
                    @ViewBag.Scale4Count2,
                    @ViewBag.Scale4Count3,
                    @ViewBag.Scale4Count4
                ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }],
        },
        options:options
    }); 
    
    const chart8 = new Chart(Question8, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',
            ],  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question8)',
                data: [
                @ViewBag.AgeCount1,
                @ViewBag.AgeCount2,
                @ViewBag.AgeCount3, 
                @ViewBag.AgeCount4,
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options: options
    }); 
    
    const chart9 = new Chart(Question9, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',
            ],  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question9)',
                data: [
                @ViewBag.AgeCount1,
                @ViewBag.AgeCount2,
                @ViewBag.AgeCount3, 
                @ViewBag.AgeCount4
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options: options
    });

    const chart10 = new Chart(Question10, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',
            ]
            ,  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question10)',
                data: [
                @ViewBag.Scale7Count1,
                @ViewBag.Scale7Count2,
                @ViewBag.Scale7Count3, 
                @ViewBag.Scale7Count4,
                @ViewBag.Scale7Count5
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options: options
    });

    if (`@ViewBag.Question11`.length > 0){
        const Question11 = document.getElementById('Question11').getContext('2d');
        const containerOfQuestion11 = document.getElementById('containerOfQuestion11');
        containerOfQuestion11.style.display = "block"
        
    const chart11 = new Chart(Question11, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',
            ],  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question11)',
                data: [
                @ViewBag.Scale8Count1,
                @ViewBag.Scale8Count2,
                @ViewBag.Scale8Count3, 
                @ViewBag.Scale8Count4,
                @ViewBag.Scale8Count5,
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options:options
    });
}
    if (`@ViewBag.Question12`.length > 0){
    const Question12 = document.getElementById('Question12').getContext('2d');
    const containerOfQuestion12 = document.getElementById('containerOfQuestion12');
    containerOfQuestion12.style.display = "block"

    const chart12 = new Chart(Question12, {
        plugins: [ChartDataLabels],
        type: 'bar',  // Chart type (bar, line, etc.)
        data: {
            labels: [
                '@Localizer["answerScale1"]',
                '@Localizer["answerScale2"]',
                '@Localizer["answerScale3"]',
                '@Localizer["answerScale4"]',
                '@Localizer["answerScale5"]',
            ],  // X-axis labels
            datasets: [{
                label: '@Html.Raw(ViewBag.Question12)',
                data: [
                @ViewBag.Scale9Count1,
                @ViewBag.Scale9Count2,
                @ViewBag.Scale9Count3, 
                @ViewBag.Scale9Count4,
                @ViewBag.Scale9Count5,
                  ],  // Y-axis values
                borderColor: 'rgba(5, 41, 118, 1)',
                backgroundColor: 'rgba(5, 41, 118, 1)',
                borderWidth: 1
            }]
        },
        options: options
    });
}

   if (`@ViewBag.Question13`.length > 0){
   
       const Question13 = document.getElementById('Question13').getContext('2d');
       const containerOfQuestion13 = document.getElementById('containerOfQuestion13');
       containerOfQuestion13.style.display = "block"
       
       const chart13 = new Chart(Question13, {
           plugins: [ChartDataLabels],
           type: 'bar',  // Chart type (bar, line, etc.)
           data: {
               labels: [
                   '@Localizer["answerScale1"]',
                   '@Localizer["answerScale2"]',
                   '@Localizer["answerScale3"]',
                   '@Localizer["answerScale4"]',
                   '@Localizer["answerScale5"]',
               ],  // X-axis labels
               datasets: [{
                   label: '@Html.Raw(ViewBag.Question13)',
                   data: [
                       @ViewBag.Scale10Count1,
                       @ViewBag.Scale10Count2,
                       @ViewBag.Scale10Count3,
                       @ViewBag.Scale10Count4,
                       @ViewBag.Scale10Count5
                   ],  // Y-axis values
                   borderColor: 'rgba(5, 41, 118, 1)',
                   backgroundColor: 'rgba(5, 41, 118, 1)',
                   borderWidth: 1
               }]
           },
           options: options
       });
   }
  


</script>