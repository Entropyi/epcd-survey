@using Azure.Core
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject IViewLocalizer Localizer
@model FormEntry

@{
    ViewData["Title"] = ViewData["Category"];


    string formTitle = string.Empty;
    string formSection1 = string.Empty;
    string formSection2 = string.Empty;
    string formSection3 = string.Empty;

    string question1 = string.Empty;
    string question2 = string.Empty;
    string question3 = string.Empty;
    string question4 = string.Empty;
    string question5 = string.Empty;
    string question6 = string.Empty;
    string question7 = string.Empty;
    string question8 = string.Empty;
    string question9 = string.Empty;
    string question10 = string.Empty;

    string? question11 = null;
    string? question12 = null;
    string? question13 = null;
    string? question14 = null;

    try
    {
        formTitle = ViewBag.Form.FormTitleAr;
        formSection1 = ViewBag.Form.FormSectionOneLabelAr;
        formSection2 = ViewBag.Form.FormSectionTwoLabelAr;
        formSection3 = ViewBag.Form.FormSectionThreeLabelAr;

        question1 = ViewBag.Form.Question1;
        question2 = ViewBag.Form.Question2;
        question3 = ViewBag.Form.Question3;
        question4 = ViewBag.Form.Question4;
        question5 = ViewBag.Form.Question5;
        question6 = ViewBag.Form.Question6;
        question7 = ViewBag.Form.Question7;
        question8 = ViewBag.Form.Question8;
        question9 = ViewBag.Form.Question9;
        question10 = ViewBag.Form.Question10;


        if (ViewBag.Form.Question11 != null)
        {
            question11 = ViewBag.Form.Question11;
        }

        if (ViewBag.Form.Question12 != null)
        {
            question12 = ViewBag.Form.Question12;
        }

        if (ViewBag.Form.Question13 != null)
        {
            question13 = ViewBag.Form.Question13;
        }

        if (ViewBag.Form.OpenQuestionAr != null)
        {
            question14 = ViewBag.Form.OpenQuestionAr;
        }


        if (Thread.CurrentThread.CurrentCulture.Name != "ar")
        {
            formTitle = ViewBag.Form.FormTitleEn;

            formSection1 = ViewBag.Form.FormSectionOneLabelEn;
            formSection2 = ViewBag.Form.FormSectionTwoLabelEn;
            formSection3 = ViewBag.Form.FormSectionThreeLabelEn;

            question1 = ViewBag.Form.Question1EN;
            question2 = ViewBag.Form.Question2EN;
            question3 = ViewBag.Form.Question3EN;
            question4 = ViewBag.Form.Question4EN;
            question5 = ViewBag.Form.Question5EN;
            question6 = ViewBag.Form.Question6EN;
            question7 = ViewBag.Form.Question7EN;
            question8 = ViewBag.Form.Question8EN;
            question9 = ViewBag.Form.Question9EN;
            question10 = ViewBag.Form.Question10EN;


            if (ViewBag.Form.Question11 != null)
            {
                question11 = ViewBag.Form.Question11EN;
            }

            if (ViewBag.Form.Question12 != null)
            {
                question12 = ViewBag.Form.Question12EN;
            }

            if (ViewBag.Form.Question13 != null)
            {
                question13 = ViewBag.Form.Question13EN;
            }

            if (ViewBag.Form.OpenQuestionAr != null)
            {
                question14 = ViewBag.Form.OpenQuestionEn;
            }
        }
        else
        {
            formTitle = ViewBag.Form.FormTitleAr;
            formSection1 = ViewBag.Form.FormSectionOneLabelAr;
            formSection2 = ViewBag.Form.FormSectionTwoLabelAr;
            formSection3 = ViewBag.Form.FormSectionThreeLabelAr;

            question1 = ViewBag.Form.Question1;
            question2 = ViewBag.Form.Question2;
            question3 = ViewBag.Form.Question3;
            question4 = ViewBag.Form.Question4;
            question5 = ViewBag.Form.Question5;
            question6 = ViewBag.Form.Question6;
            question7 = ViewBag.Form.Question7;
            question8 = ViewBag.Form.Question8;
            question9 = ViewBag.Form.Question9;
            question10 = ViewBag.Form.Question10;

            if (ViewBag.Form.Question11 != null && ViewBag.Form.Question13 != null)
            {
                question11 = ViewBag.Form.Question11;
            }

            if (ViewBag.Form.Question12 != null && ViewBag.Form.Question12 != null)
            {
                question12 = ViewBag.Form.Question12;
            }

            if (ViewBag.Form.Question13 != null && ViewBag.Form.Question13 != null)
            {
                question13 = ViewBag.Form.Question13;
            }

            if (ViewBag.Form.OpenQuestionAr != null && ViewBag.Form.OpenQuestionAr != null)
            {
                question14 = ViewBag.Form.OpenQuestionAr;
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e);
        throw;
    }
}

<div class="landing-root-container">
<div class="landing-sub-container" id="landing-background">
<div class="top-container">
@await Html.PartialAsync("HeaderR")

<div class="form2-root-container">

<form method="post" asp-action="Index" class="form2-container">

<div asp-validation-summary="ModelOnly"></div>

<div class="form2__super-title-container">
    <h1 class="form2__super-title-text" id="formTitle">@formTitle</h1>
</div>


<div class="form2__section-container">
    <div class="form2__section-title-container" id="section1Container">
        <h3 class="form2__section-title-text"> @formSection1</h3>
    </div>

    <div class="progress-bar-spacing-container">
        <div class="progress-bar_super-container">
            <div class="progress-bar_sub-container" id="progressBar">
            </div>
        </div>
    </div>


    <div class="form2__input-container" id="Question1">
        <label class="form2__label-text">@question1</label>
        <div class="AgeGroupLabel">
            <div>
                <input class="test" name="AgeGroup" type="radio" value="1">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["AgeGroupLabel1"]</label>
            </div>

            <div>
                <input class="test" name="AgeGroup" type="radio" value="2">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["AgeGroupLabel2"]</label>
            </div>

            <div>
                <input class="test" name="AgeGroup" type="radio" value="3">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["AgeGroupLabel3"]</label>
            </div>

            <div>
                <input class="test" name="AgeGroup" type="radio" value="4">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["AgeGroupLabel4"]</label>
            </div>
        </div>
        <span asp-validation-for="AgeGroup" class="text-danger"></span>

    </div>

    <div class="form2__input-container" id="Question2">
        <label class="form2__label-text">@question2</label>
        <div class="AgeGroupLabel">
            <div>
                <input class="test" name="Sex" type="radio" value="Male">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["Sex1"]</label>
            </div>

            <div>
                <input class="test" name="Sex" type="radio" value="Female">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["Sex2"]</label>
            </div>
        </div>
        <span asp-validation-for="Sex" class="text-danger"></span>

    </div>

    <div class="form2__input-container" id="Question3">
        <label class="form2__label-text">@question3</label>
        <div class="AgeGroupLabel">
            <div>
                <input class="test" name="Education" type="radio" value="1">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["eduLabel1"]</label>
            </div>

            <div>
                <input class="test" name="Education" type="radio" value="2">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["eduLabel2"]</label>
            </div>

            <div>
                <input class="test" name="Education" type="radio" value="3">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["eduLabel3"]</label>
            </div>

            <div>
                <input class="test" name="Education" type="radio" value="4">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["eduLabel4"]</label>
            </div>

            <div>
                <input class="test" name="Education" type="radio" value="5">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["eduLabel5"]</label>
            </div>
        </div>
        <span asp-validation-for="Education" class="text-danger"></span>
    </div>


    <div class="form2__section-title-container" id="section2Container">
        <h3 class="form2__section-title-text">@formSection2</h3>
    </div>


    <div class="form2__input-container" id="Question4">
        <label class="form2__label-text">@question4</label>
        <div class="AgeGroupLabel">
            <div>
                <input class="test" name="Scale1" type="radio" value="1">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
            </div>

            <div>
                <input class="test" name="Scale1" type="radio" value="2">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
            </div>

            <div>
                <input class="test" name="Scale1" type="radio" value="3">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
            </div>

            <div>
                <input class="test" name="Scale1" type="radio" value="4">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
            </div>
        </div>
        <span asp-validation-for="Scale1" class="text-danger"></span>
    </div>

    <div class="form2__input-container" id="Question5">
        <label class="form2__label-text">@question5</label>
        <div class="AgeGroupLabel">
            <div>
                <input class="test" name="Scale2" type="radio" value="1">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
            </div>

            <div>
                <input class="test" name="Scale2" type="radio" value="2">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
            </div>

            <div>
                <input class="test" name="Scale2" type="radio" value="3">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
            </div>

            <div>
                <input class="test" name="Scale2" type="radio" value="4">
                <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
            </div>
        </div>
        <span asp-validation-for="Scale2" class="text-danger"></span>
    </div>
</div>

<div class="form2__input-container" id="Question6">
    <label class="form2__label-text">@question6</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale3" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale3" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale3" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale3" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale3" class="text-danger"></span>
</div>

<div class="form2__input-container" id="Question7">
    <label class="form2__label-text">@question7</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale4" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale4" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale4" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale4" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale4" class="text-danger"></span>
</div>

<div class="form2__input-container" id="Question8">
    <label class="form2__label-text">@question8</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale5" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale5" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale5" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale5" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale5" class="text-danger"></span>
</div>

<div class="form2__input-container" id="Question9">
    <label class="form2__label-text">@question9</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale6" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale6" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale6" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale6" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale6" class="text-danger"></span>
</div>

<div class="form2__input-container" id="Question10">
    <label class="form2__label-text" id="Question10Title">@question10</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale7" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale7" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale7" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale7" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale7" class="text-danger"></span>
</div>

<div class="form2__input-container" id="Question11">
    <label class="form2__label-text" id="Question11Title">@question11</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale8" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale8" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale8" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale8" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale8" class="text-danger"></span>
</div>

<div class="form2__input-container" id="Question12">
    <label class="form2__label-text" id="Question12Title">@question12</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale9" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale9" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale9" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale9" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale9" class="text-danger"></span>
</div>


<div class="form2__input-container" id="Question13">
    <label class="form2__label-text" id="Question13Title">question13</label>
    <div class="AgeGroupLabel">
        <div>
            <input class="test" name="Scale10" type="radio" value="1">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote1"]</label>
        </div>

        <div>
            <input class="test" name="Scale10" type="radio" value="2">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote2"]</label>
        </div>

        <div>
            <input class="test" name="Scale10" type="radio" value="3">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote3"]</label>
        </div>

        <div>
            <input class="test" name="Scale10" type="radio" value="4">
            <label class="form2__label-text-1" for="checkbox1">@Localizer["vote4"]</label>
        </div>
    </div>
    <span asp-validation-for="Scale10" class="text-danger"></span>
</div>

<div class="form2__section-title-container" id="section3Container">
    <h3 class="form2__section-title-text">@formSection3</h3>
</div>


<div class="form2__input-container" id="Question14">
    <label class="form__label-text">@question14</label>
    <textarea asp-for="OpenQuestion" class="form__input"></textarea>
    <span asp-validation-for="OpenQuestion" class="text-danger"></span>
</div>

<div class="form2_navigations-container">
    <div class="form2__before-container">
        <input class="before-disabled" type="button" name="" id="before" value="@Localizer["before"]">
    </div>

    <div class="form2__next-container">
        <input class="before-disabled" type="button" name="" id="next" value="@Localizer["next"]">
    </div>


    <div class="form2__submit-container" id="submit">
        <input class="form2__submit" type="submit" name="" id="" value="@Localizer["submit"]">
    </div>
</div>

<div class="progress-indicator__super-container">
    <div class="progress-indicator__container">
        <div class="number-container">
            <div class="current-container">
                <p class="current-text" id="current-question">1</p>
            </div>
            <div class="separator-container">
                <p class="separator-text">/</p>
            </div>
            <div class="total-container">
                <p class="total-text" id="total-questions">11</p>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="locale" value="@Thread.CurrentThread.CurrentCulture.Name" asp-for="Language">
<input type="hidden" asp-for="CreationDate" value="@DateTime.Now">
<input type="hidden" asp-for="FormId" value="@ViewBag.Form.id">
<input type="hidden" asp-for="Language" value="@Thread.CurrentThread.CurrentCulture.Name">
<input type="hidden" asp-for="Category" value="@ViewBag.Category">

</form>
</div>

</div>


</div>


</div>

@section Scripts {
    <script>
        const next = document.getElementById("next");
        const back = document.getElementById("before");
        const submit = document.getElementById("submit");

        const section1Container = document.getElementById("section1Container");
        const question1Container = document.getElementById("Question1");
        const question2Container = document.getElementById("Question2");
        const question3Container = document.getElementById("Question3");

        const section2Container = document.getElementById("section2Container");
        const question4Container = document.getElementById("Question4");
        const question5Container = document.getElementById("Question5");
        const question6Container = document.getElementById("Question6");
        const question7Container = document.getElementById("Question7");
        const question8Container = document.getElementById("Question8");
        const question9Container = document.getElementById("Question9");
        const question10Container = document.getElementById("Question10");
        const question11Container = document.getElementById("Question11");
        const question12Container = document.getElementById("Question12");
        const question13Container = document.getElementById("Question13");

        const section3Container = document.getElementById("section3Container");
        const question14Container = document.getElementById("Question14");


        const Question11length = "@question11".length;
        const Question12length = "@question12".length;
        const Question13length = "@question13".length;

        let AgeGroup = document.querySelectorAll('input[name = "AgeGroup"]')
        let Sex = document.querySelectorAll('input[name = "Sex"]')
        let Education = document.querySelectorAll('input[name = "Education"]')
        let Scale1 = document.querySelectorAll('input[name = "Scale1"]')
        let Scale2 = document.querySelectorAll('input[name = "Scale2"]')
        let Scale3 = document.querySelectorAll('input[name = "Scale3"]')
        let Scale4 = document.querySelectorAll('input[name = "Scale4"]')
        let Scale5 = document.querySelectorAll('input[name = "Scale5"]')
        let Scale6 = document.querySelectorAll('input[name = "Scale6"]')
        let Scale7 = document.querySelectorAll('input[name = "Scale7"]')
        let Scale8 = document.querySelectorAll('input[name = "Scale8"]')
        let Scale9 = document.querySelectorAll('input[name = "Scale9"]')
        let Scale10 = document.querySelectorAll('input[name = "Scale10"]')

        section1Container.style.display = "flex"
        question1Container.style.display = "flex"

        const progressBar = document.getElementById("progressBar")
        const currentQuestion = document.getElementById("current-question")
        const totalQuestions = document.getElementById("total-questions")

        let count = 1;

        const countQuestion = () => {
            let number = 11;
            number += Question11length > 0 ? 1 : 0;
            number += Question12length > 0 ? 1 : 0;
            number += Question13length > 0 ? 1 : 0;
            return number;
        }

        const numberOfQuestions = countQuestion()
        totalQuestions.innerText = countQuestion()

        progressBar.style.width = `${count/countQuestion()*100}%`;


        (function () {
            AgeGroup.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();

        (function () {
            Sex.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Education.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale1.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale2.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale3.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale4.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale5.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale6.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale7.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        (function () {
            Scale8.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();

        (function () {
            Scale10.forEach(button => {
                button.addEventListener("input", () => {
                    nextButtonStatus();
                }, {once: true});
            });
        })();


        next.addEventListener("click", () => {
            checkChecker(count)
            
            if (count < 14 && checkChecker(count)) {
                changeContainerDisplay(count, "none");
                count++;
                next.classList.replace("form2__next", "before-disabled")
               
                changeContainerDisplay(count, "flex");
                backButtonStatus(count);
                
                if (countQuestion() < 14 && count == 14){
                    progressBar.style.width = `${count/countQuestion()*100}%`;
                    currentQuestion.innerText = countQuestion();
                } else {
                    progressBar.style.width = `${count/countQuestion()*100}%`;
                    currentQuestion.innerText = count;
                }
            } else {
              if (count >= 14){
                  next.style.display = "none";
                  submit.style.display = "flex";
              }
            }
        })


        back.addEventListener("click", () => {
            if(count > 1 && count < 11) {
                next.classList.replace("before-disabled", "form2__next")
                changeContainerDisplay(count, "none");
                count--;
                changeContainerDisplay(count, "flex");
                backButtonStatus(count);
                progressBar.style.width = `${count/countQuestion()*100}%`;
                currentQuestion.innerText = count;

            } else {
            if (count > 1){
                if(count >= 11) {
                    let oldCount = count ;
                    count--;
                    if (Question13length <= 0 && count == 13){
                        count--;
                        if(Question12length <= 0 && count == 12){
                            count--;
                            if(Question11length <= 0 && count == 11){
                                count--;
                                next.classList.replace("before-disabled", "form2__next")
                                changeContainerDisplay(oldCount, "none");
                                changeContainerDisplay(count, "flex");
                                backButtonStatus(count);
                                progressBar.style.width = `${count/countQuestion()*100}%`;
                                currentQuestion.innerText = count;
                            } else {
                                next.classList.replace("before-disabled", "form2__next")
                                changeContainerDisplay(oldCount, "none");
                                changeContainerDisplay(count, "flex");
                                backButtonStatus(count);
                                progressBar.style.width = `${count/countQuestion()*100}%`;
                                currentQuestion.innerText = count;
                            }
                        } else {
                            next.classList.replace("before-disabled", "form2__next")
                            changeContainerDisplay(oldCount, "none");
                            changeContainerDisplay(count, "flex");
                            backButtonStatus(count);
                            progressBar.style.width = `${count/countQuestion()*100}%`;
                            currentQuestion.innerText = count;
                        }
                    } else {
                        next.classList.replace("before-disabled", "form2__next")
                        changeContainerDisplay(oldCount, "none");
                        changeContainerDisplay(count, "flex");
                        backButtonStatus(count);
                        progressBar.style.width = `${count/countQuestion()*100}%`;
                        currentQuestion.innerText = count;
                    }

                }
            }
            }
        })


        const backEvent = () => {
            next.classList.replace("before-disabled", "form2__next")
            changeContainerDisplay(count, "none");
            count--;
            changeContainerDisplay(count, "flex");
            backButtonStatus(count);
        }


        const checkChecker = (questionNumber) => {
            switch (questionNumber) {
                case 1:
                    let ageGroup = document.querySelector('input[name = "AgeGroup"]:checked')
                    return checkForNullRadioList(ageGroup);
                    break;
                case 2:
                    let sex = document.querySelector('input[name = "Sex"]:checked')
                    return checkForNullRadioList(sex);
                    break;
                case 3:
                    let education = document.querySelector('input[name = "Education"]:checked')
                    return checkForNullRadioList(education);
                    break;
                case 4:
                    let scale1 = document.querySelector('input[name = "Scale1"]:checked')
                    return checkForNullRadioList(scale1);
                    break;
                case 5:
                    let scale2 = document.querySelector('input[name = "Scale2"]:checked')
                    return checkForNullRadioList(scale2);
                    break;
                case 6:
                    let scale3 = document.querySelector('input[name = "Scale3"]:checked')
                    return checkForNullRadioList(scale3);
                    break;
                case 7:
                    let scale4 = document.querySelector('input[name = "Scale4"]:checked')
                    return checkForNullRadioList(scale4);
                    break;
                case 8:
                    let scale5 = document.querySelector('input[name = "Scale5"]:checked')
                    return checkForNullRadioList(scale5);
                    break;
                case 9:
                    let scale6 = document.querySelector('input[name = "Scale6"]:checked')
                    return checkForNullRadioList(scale6);
                    break;
                case 10:
                    let scale7 = document.querySelector('input[name = "Scale7"]:checked')
                    return checkForNullRadioList(scale7);
                    break;
                case 11:
                    let scale8 = document.querySelector('input[name = "Scale8"]:checked')
                    return checkForNullRadioList(scale8);
                    break;
                case 12:
                    let scale9 = document.querySelector('input[name = "Scale9"]:checked')
                    return checkForNullRadioList(scale9);
                    break;
                case 13:
                    let scale10 = document.querySelector('input[name = "Scale10"]:checked')
                    return checkForNullRadioList(scale10);
                    break;
            }
        }

        const backButtonStatus = (count) => {
            if (count > 1) {
                back.classList.replace("before-disabled", "form2__before")
                back.disabled = false;

            } else {
                back.classList.replace("form2__before", "before-disabled")
                back.disabled = true;


            }
        }

        const nextButtonStatus = () => {
            next.classList.replace("before-disabled", "form2__next")
            next.disabled = false;
        }


        const changeContainerDisplay = (number, display) => {

            if (number <= 3) {
                section1Container.innerHTML = "@formSection1"
                section1Container.classList.add("form2__section-title-text");
             
            } else if (number <= 13) {
                section1Container.innerHTML = "@formSection2"
            } else {
                section1Container.innerHTML = "@formSection3"
            }

            switch (number) {
                case 1:
                    question1Container.style.display = display;
                    break;
                case 2:
                    question2Container.style.display = display;
                    break;
                case 3:
                    question3Container.style.display = display;
                    break;
                case 4:
                    question4Container.style.display = display;
                    break;
                case 5:
                    question5Container.style.display = display;
                    break;
                case 6:
                    question6Container.style.display = display;
                    break;
                case 7:
                    question7Container.style.display = display;
                    break;
                case 8:
                    question8Container.style.display = display;
                    break;
                case 9:
                    question9Container.style.display = display;
                    break;
                case 10:
                    question10Container.style.display = display;
                    break;
                case 11:
                    if (Question11length > 0) {
                        question11Container.style.display = display;
                    } else {
                        count++;
                        changeContainerDisplay(count, "flex")

                    }
                    break;
                case 12:
                    if (Question12length > 0) {
                        question12Container.style.display = display;
                        return;
                        break;
                    } else {
                        number++;
                        count++;
                        changeContainerDisplay(count, "flex")
                    }
                    break;
                case 13:
                    if (Question13length > 0) {
                        question13Container.style.display = display;
                        return;
                        break;
                    } else {
                        number++;
                        count++;
                        changeContainerDisplay(count, "flex")
                    }
                    break;

                case 14:
                    question14Container.style.display = display;
                    return;
                    break;


            }
        }

        const checkForNull = (string) => {
            if (!string || string.length <= 0) {
                return "none";
            }
            return "flex";
        }

        const checkForNullRadioList = (list) => {
            if (list) {
                return true;
            } else {
                return false;
            }

        }
    </script>
}